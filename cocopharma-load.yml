---
###
# Copyright 2018 IBM Corp. All Rights Reserved.
# 
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# 
#      http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
###

- name: setup Information Server vars
  hosts: all
  tasks:
    - import_role: name=IBM.infosvr tasks_from=setup_vars.yml
    - import_role: name=IBM.infosvr tasks_from=get_certificate.yml
      tags: ['always']

- name: create Information Server CocoPharma database
  hosts:
    - ibm-information-server-repo
  vars_files:
    - vars/cocopharma.yml
  tasks:
    - name: drop any existing database
      shell: >
              source ~/.bashrc &&
              db2 DROP DATABASE {{ ibm_infosvr_samples_cocopharma_targets.db_name | upper }}
      args:
        executable: /bin/bash
      become: yes
      become_user: "{{ ibm_infosvr_users.db2inst1 }}"
      ignore_errors: yes

    - name: ensure target directory exists
      file:
        path: "{{ ibm_infosvr_samples_cocopharma_targets.db_location }}"
        state: directory
        mode: 0755
        owner: "{{ ibm_infosvr_users.db2inst1 }}"
        group: "{{ ibm_infosvr_groups.db2iadm1 }}"
      become: yes

    - name: create database
      shell: >
              source ~/.bashrc &&
              db2 {{ item }}
      args:
        executable: /bin/bash
      become: yes
      become_user: "{{ ibm_infosvr_users.db2inst1 }}"
      with_items:
        - CREATE DATABASE {{ ibm_infosvr_samples_cocopharma_targets.db_name | upper }} ON '{{ ibm_infosvr_samples_cocopharma_targets.db_location }}' USING CODESET UTF-8 TERRITORY US COLLATE USING IDENTITY DFT_EXTENT_SZ 2 USER TABLESPACE MANAGED BY AUTOMATIC STORAGE AUTORESIZE YES INITIALSIZE 1 G INCREASESIZE 10 PERCENT MAXSIZE NONE
        - UPDATE DATABASE CONFIGURATION FOR {{ ibm_infosvr_samples_cocopharma_targets.db_name | upper }} USING SHEAPTHRES_SHR AUTOMATIC
        - UPDATE DATABASE CONFIGURATION FOR {{ ibm_infosvr_samples_cocopharma_targets.db_name | upper }} USING LOGFILSIZ 32768

- name: load Information Server CocoPharma samples
  hosts:
    - ibm-information-server-engine
    - ibm-information-server-domain
    - ibm-information-server-repo
  vars_files:
    - vars/cocopharma.yml
  vars:
    rest_mappings:
      - { type: "host", property: "name", from: "ENG.INFOSVR.VAGRANT.IBM.COM", to: "{{ groups['ibm-information-server-engine'][0] | upper }}" }
      - { type: "host_(engine)", property: "name", from: "ENG.INFOSVR.VAGRANT.IBM.COM", to: "{{ groups['ibm-information-server-engine'][0] | upper }}" }
      - { type: "host", property: "name", from: "DB.INFOSVR.VAGRANT.IBM.COM", to: "{{ groups['ibm-information-server-repo'][0] | upper }}" }
      - { type: "host_(engine)", property: "name", from: "DB.INFOSVR.VAGRANT.IBM.COM", to: "{{ groups['ibm-information-server-repo'][0] | upper }}" }
      - { type: "data_file", property: "path", from: "/data/files/CocoPharma", to: "{{ ibm_infosvr_samples_cocopharma_targets.files }}" }
    iaxml_mappings:
      - { type: "DataSource", attr: "host", from: "DB.INFOSVR.VAGRANT.IBM.COM", to: "{{ groups['ibm-information-server-repo'][0] | upper }}" }
      - { type: "DataSource", attr: "name", from: "COCOPHRM", to: "{{ ibm_infosvr_samples_cocopharma_targets.db_name | upper }}" }
  tasks:
    - name: ensure data file directory exists
      file:
        path: "{{ ibm_infosvr_samples_cocopharma_targets.files }}"
        state: directory
        mode: 0755
        owner: "{{ ibm_infosvr_users.dsadm }}"
        group: "{{ ibm_infosvr_groups.dsadm }}"
      become: yes
      when: ('ibm-information-server-engine' in group_names)

    - name: transfer sample data files
      copy:
        src: "{{ ibm_infosvr_samples_cocopharma_media }}/data/"
        dest: "{{ ibm_infosvr_samples_cocopharma_targets.files }}"
        owner: "{{ ibm_infosvr_users.dsadm }}"
        group: "{{ ibm_infosvr_groups.dsadm }}"
        mode: 0644
      become: yes
      when: ('ibm-information-server-engine' in group_names)

    - name: copy data load script
      template:
        src: "{{ ibm_infosvr_samples_cocopharma_media }}/db2_load.sql"
        dest: "/home/{{ ibm_infosvr_users.db2inst1 }}/cocopharma.sql"
      become_user: "{{ ibm_infosvr_users.db2inst1 }}"
      become: yes
      when: ('ibm-information-server-repo' in group_names)

    - name: load sample data to database
      shell: >
              source ~/.bashrc &&
              db2 -td$ -f /home/{{ ibm_infosvr_users.db2inst1 }}/cocopharma.sql
      args:
        executable: /bin/bash
      become_user: "{{ ibm_infosvr_users.db2inst1 }}"
      become: yes
      register: __db2_load_result
      failed_when: __db2_load_result.rc != 0 and __db2_load_result.rc != 4
      when: ('ibm-information-server-repo' in group_names)

    - name: check remote database catalog status
      shell: "source ~/.bashrc && db2 list database directory"
      args:
        executable: /bin/bash
      become_user: "{{ ibm_infosvr_users.db2inst1 }}"
      become: yes
      ignore_errors: yes
      register: __cocopharma_db2catalog_completion
      changed_when: False
      when: ('ibm-information-server-engine' in group_names)
    
    - name: catalog remote data nodes
      shell: "source ~/.bashrc && db2 {{ item }}"
      args:
        executable: /bin/bash
      with_items:
        - "catalog database {{ ibm_infosvr_samples_cocopharma_targets.db_name | upper }} at node REPO"
        - "terminate"
      become_user: "{{ ibm_infosvr_users.db2inst1 }}"
      become: yes
      when: ('ibm-information-server-engine' in group_names) and __cocopharma_db2catalog_completion.stdout.find(ibm_infosvr_samples_cocopharma_targets.db_name) == -1

    - import_role: name=IBM.infosvr-metadata-asset-manager
      vars:
        ibm_infosvr_metadata_asset_mgr_import_areas:
          - name: CocoPharma_SampleFiles
            type: LocalFileConnector
            description: "Loads metadata for CocoPharma sample files"
            metadata_interchange_server: "{{ groups['ibm-information-server-engine'][0] | lower }}"
            dcn:
              name: LOCALFS
            assets_to_import:
              - "folder[{{ ibm_infosvr_samples_cocopharma_targets.files }}]"
            hostname: "{{ groups['ibm-information-server-engine'][0] | upper }}"
          - name: CocoPharma_SampleDB
            type: DB2Connector
            description: "Import area for CocoPharma sample database"
            metadata_interchange_server: "{{ groups['ibm-information-server-engine'][0] | lower }}"
            dcn:
              name: CocoPharma_DB2
              description: "CocoPharma DB2 connection"
              database: "{{ ibm_infosvr_samples_cocopharma_targets.db_name | upper }}"
              username: "{{ ibm_infosvr_users.db2inst1 }}"
              password: "{{ ibm_infosvr_upwds.db2inst1 }}"
            assets_to_import:
              - "database[{{ ibm_infosvr_samples_cocopharma_targets.db_name | upper }}]"
            hostname: "{{ groups['ibm-information-server-repo'][0] | upper }}"
            database_name: "{{ ibm_infosvr_samples_cocopharma_targets.db_name | upper }}"

    - import_role: name=IBM.infosvr-import-export
      vars:
        ingest:
          glossary:
            - from: "{{ ibm_infosvr_samples_cocopharma_media }}/bg.xml"
              merged_by: overwrite
          relationships:
            - from: "{{ ibm_infosvr_samples_cocopharma_media }}/dbcol2term.json"
              using_mode: REPLACE_ALL
              with_options:
                transformed_by: "{{ rest_mappings }}"
            - from: "{{ ibm_infosvr_samples_cocopharma_media }}/dfcol2term.json"
              using_mode: REPLACE_ALL
              with_options:
                transformed_by: "{{ rest_mappings }}"
          infoanalyzer:
            - from: "{{ ibm_infosvr_samples_cocopharma_media }}/ia.xml"
              into_project: CocoPharma
              with_options:
                transformed_by: "{{ iaxml_mappings }}"
        progress:
          - assets_of_type: category
            using_action: publish
            with_options:
              only_with_conditions:
                - { property: "parent_category.name", operator: "=", value: "Coco Pharmaceuticals" }
                - { property: "name", operator: "=", value: "Coco Pharmaceuticals" }
              condition_join: OR
              with_comment: "Auto-publication by samples import process"
          - assets_of_type: term
            using_action: publish
            with_options:
              only_with_conditions:
                - { property: "parent_category.parent_category.name", operator: "=", value: "Coco Pharmaceuticals" }
              with_comment: "Auto-publication by samples import process"
        validate:
          that:
            - number_of: category
              meeting_any_conditions:
                - { property: "parent_category.name", operator: "=", value: "Coco Pharmaceuticals" }
              is: 2
            - number_of: term
              meeting_all_conditions:
                - { property: "parent_category.parent_category.name", operator: "=", value: "Coco Pharmaceuticals" }
              is: 51
            - number_of: database_column
              meeting_all_conditions:
                - { property: "database_table_or_view.database_schema.database.name", operator: "=", value: "{{ ibm_infosvr_samples_cocopharma_targets.db_name | upper }}" }
                - { property: "database_table_or_view.database_schema.database.host.name", operator: "=", value: "{{ groups['ibm-information-server-repo'][0] | upper }}" }
              is: 63
            - number_of: database_column
              meeting_all_conditions:
                - { property: "database_table_or_view.database_schema.database.name", operator: "=", value: "{{ ibm_infosvr_samples_cocopharma_targets.db_name | upper }}" }
                - { property: "database_table_or_view.database_schema.database.host.name", operator: "=", value: "{{ groups['ibm-information-server-repo'][0] | upper }}" }
                - { property: "assigned_to_terms.parent_category.parent_category.name", operator: "=", value: "Coco Pharmaceuticals" }
              is: 61
            - number_of: data_file_field
              meeting_all_conditions:
                - { property: "data_file_record.data_file.host.name", operator: "=", value: "{{ groups['ibm-information-server-engine'][0] | upper }}" }
                - { property: "data_file_record.data_file.path", operator: "=", value: "{{ ibm_infosvr_samples_cocopharma_targets.files }}" }
              is: 63
            - number_of: data_file_field
              meeting_all_conditions:
                - { property: "data_file_record.data_file.host.name", operator: "=", value: "{{ groups['ibm-information-server-engine'][0] | upper }}" }
                - { property: "data_file_record.data_file.path", operator: "=", value: "{{ ibm_infosvr_samples_cocopharma_targets.files }}" }
                - { property: "assigned_to_terms.parent_category.parent_category.name", operator: "=", value: "Coco Pharmaceuticals" }
              is: 61

- name: create CocoPharma users
  hosts:
    - ibm-information-server-engine
  vars_files:
    - vars/native.yml
    - vars/cocopharma_users.yml
  tasks:
    - name: list groups
      shell: >
          {{ ibm_infosvr_locations.linux }}/ASBNode/bin/DirectoryCommand.sh
          -user {{ ibm_infosvr_users.isadmin }}
          -password {{ ibm_infosvr_upwds.isadmin }}
          -url https://{{ ibm_infosvr_hosts.domain }}:{{ ibm_infosvr_ports_ext.console }}
          -list GROUPS
      args:
        executable: /bin/bash
      when: ibm_infosvr_samples_cocopharma_groups is defined
      register: __cocopharma_existing_groups

    - name: create groups
      shell: >
          {{ ibm_infosvr_locations.linux }}/ASBNode/bin/DirectoryCommand.sh
          -user {{ ibm_infosvr_users.isadmin }}
          -password {{ ibm_infosvr_upwds.isadmin }}
          -url https://{{ ibm_infosvr_hosts.domain }}:{{ ibm_infosvr_ports_ext.console }}
          -add_group '{{ item.id }}~{{ item.name }}'
      args:
        executable: /bin/bash
      when: >
        __cocopharma_existing_groups is defined
        and __cocopharma_existing_groups.stdout.find(item.id) == -1
      with_items: "{{ ibm_infosvr_samples_cocopharma_groups }}"
      loop_control:
        label: "{{ item.id }}"

    - name: reset roles on groups to none
      shell: >
          {{ ibm_infosvr_locations.linux }}/ASBNode/bin/DirectoryCommand.sh
          -user {{ ibm_infosvr_users.isadmin }}
          -password {{ ibm_infosvr_upwds.isadmin }}
          -url https://{{ ibm_infosvr_hosts.domain }}:{{ ibm_infosvr_ports_ext.console }}
          -remove_group_roles '{{ item.id }}${{ ibm_infosvr_roles | json_query('[].id') | join("~") }}'
      args:
        executable: /bin/bash
      with_items: "{{ ibm_infosvr_samples_cocopharma_groups }}"
      when: ibm_infosvr_samples_cocopharma_groups is defined
      loop_control:
        label: "{{ item.id }}"

    - name: assign roles to groups
      shell: >
          {{ ibm_infosvr_locations.linux }}/ASBNode/bin/DirectoryCommand.sh
          -user {{ ibm_infosvr_users.isadmin }}
          -password {{ ibm_infosvr_upwds.isadmin }}
          -url https://{{ ibm_infosvr_hosts.domain }}:{{ ibm_infosvr_ports_ext.console }}
          -assign_group_roles '{{ item.id }}${{ item.roles | join("~") }}'
      args:
        executable: /bin/bash
      with_items: "{{ ibm_infosvr_samples_cocopharma_groups }}"
      when: ibm_infosvr_samples_cocopharma_groups is defined
      loop_control:
        label: "{{ item.id }}"

    - name: list users
      shell: >
          {{ ibm_infosvr_locations.linux }}/ASBNode/bin/DirectoryCommand.sh
          -user {{ ibm_infosvr_users.isadmin }}
          -password {{ ibm_infosvr_upwds.isadmin }}
          -url https://{{ ibm_infosvr_hosts.domain }}:{{ ibm_infosvr_ports_ext.console }}
          -list USERS
      args:
        executable: /bin/bash
      when: ibm_infosvr_samples_cocopharma_groups is defined
      register: __cocopharma_existing_users

    - name: create users
      shell: >
          {{ ibm_infosvr_locations.linux }}/ASBNode/bin/DirectoryCommand.sh
          -user {{ ibm_infosvr_users.isadmin }}
          -password {{ ibm_infosvr_upwds.isadmin }}
          -url https://{{ ibm_infosvr_hosts.domain }}:{{ ibm_infosvr_ports_ext.console }}
          -add_user '{{ item.username }}~{{ item.password }}~{{ item.firstname }}~{{ item.lastname }}~{{ item.title }}~{{ item.jobtitle }}~~~~~~~~{{ item.email }}'
      args:
        executable: /bin/bash
      when: >
        __cocopharma_existing_users is defined
        and __cocopharma_existing_users.stdout.find(item.username) == -1
      with_items: "{{ ibm_infosvr_samples_cocopharma_users }}"
      loop_control:
        label: "{{ item.username }}"

    - name: assign users to groups
      shell: >
          {{ ibm_infosvr_locations.linux }}/ASBNode/bin/DirectoryCommand.sh
          -user {{ ibm_infosvr_users.isadmin }}
          -password {{ ibm_infosvr_upwds.isadmin }}
          -url https://{{ ibm_infosvr_hosts.domain }}:{{ ibm_infosvr_ports_ext.console }}
          -add_users_group '{{ item.username }}${{ item.groups | join("~") }}'
      args:
        executable: /bin/bash
      with_items: "{{ ibm_infosvr_samples_cocopharma_users }}"
      when: ibm_infosvr_samples_cocopharma_users is defined
      loop_control:
        label: "{{ item.username }}"

    - name: get RIDs for users
      uri:
        url: "https://{{ ibm_infosvr_hosts.domain }}:{{ ibm_infosvr_ports_ext.console }}/ibm/iis/igc-rest/v1/search/"
        method: POST
        user: "{{ ibm_infosvr_users.isadmin }}"
        password: "{{ ibm_infosvr_upwds.isadmin }}"
        body: '{"properties":["principal_id"],"types":["user"],"pageSize":"1000"}'
        body_format: json
        validate_certs: no
        status_code: 200
        headers:
          Content-Type: "application/json"
      changed_when: False
      register: __cocopharma_existing_users_rids

    - name: add users as stewards
      uri:
        url: "https://{{ ibm_infosvr_hosts.domain }}:{{ ibm_infosvr_ports_ext.console }}/ibm/iis/igc-rest/v1/administration/stewards"
        method: POST
        user: "{{ ibm_infosvr_users.isadmin }}"
        password: "{{ ibm_infosvr_upwds.isadmin }}"
        body: >
                {"id":"{{ __cocopharma_existing_users_rids.json | json_query("items[?principal_id=='" + item.username + "']._id") | first }}"}
        body_format: json
        validate_certs: no
        status_code: 200
        headers:
          Content-Type: "application/json"
      with_items: "{{ ibm_infosvr_samples_cocopharma_users }}"
      when: ibm_infosvr_samples_cocopharma_users is defined
      loop_control:
        label: "{{ item.username }}"

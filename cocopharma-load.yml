---
- name: setup Information Server vars
  hosts: all
  tasks:
    - import_role: name=IBM.infosvr tasks_from=setup_vars.yml
      tags:
        - export
        - import

- name: create Information Server CocoPharma database
  hosts:
    - ibm-information-server-repo
  vars_files:
    - vars/cocopharma.yml
  tasks:
    - name: drop any existing database
      shell: >
              source ~/.bashrc &&
              db2 DROP DATABASE {{ ibm_infosvr_samples_cocopharma_targets.db_name | upper }}
      args:
        executable: /bin/bash
      become: yes
      become_user: "{{ ibm_infosvr_users.db2inst1 }}"
      ignore_errors: yes

    - name: ensure target directory exists
      file:
        path: "{{ ibm_infosvr_samples_cocopharma_targets.db_location }}"
        state: directory
        mode: 0755
        owner: "{{ ibm_infosvr_users.db2inst1 }}"
        group: "{{ ibm_infosvr_groups.db2iadm1 }}"
      become: yes

    - name: create database
      shell: >
              source ~/.bashrc &&
              db2 {{ item }}
      args:
        executable: /bin/bash
      become: yes
      become_user: "{{ ibm_infosvr_users.db2inst1 }}"
      with_items:
        - CREATE DATABASE {{ ibm_infosvr_samples_cocopharma_targets.db_name | upper }} ON '{{ ibm_infosvr_samples_cocopharma_targets.db_location }}' USING CODESET UTF-8 TERRITORY US COLLATE USING IDENTITY DFT_EXTENT_SZ 2 USER TABLESPACE MANAGED BY AUTOMATIC STORAGE AUTORESIZE YES INITIALSIZE 1 G INCREASESIZE 10 PERCENT MAXSIZE NONE
        - UPDATE DATABASE CONFIGURATION FOR {{ ibm_infosvr_samples_cocopharma_targets.db_name | upper }} USING SHEAPTHRES_SHR AUTOMATIC
        - UPDATE DATABASE CONFIGURATION FOR {{ ibm_infosvr_samples_cocopharma_targets.db_name | upper }} USING LOGFILSIZ 32768

- name: load Information Server CocoPharma samples
  hosts:
    - ibm-information-server-engine
    - ibm-information-server-domain
    - ibm-information-server-repo
  vars_files:
    - vars/cocopharma.yml
  vars:
    rest_mappings:
      - { type: "host", property: "name", from: "ENG.INFOSVR.VAGRANT.IBM.COM", to: "{{ groups['ibm-information-server-engine'][0] | upper }}" }
      - { type: "host_(engine)", property: "name", from: "ENG.INFOSVR.VAGRANT.IBM.COM", to: "{{ groups['ibm-information-server-engine'][0] | upper }}" }
      - { type: "host", property: "name", from: "DB.INFOSVR.VAGRANT.IBM.COM", to: "{{ groups['ibm-information-server-repo'][0] | upper }}" }
      - { type: "host_(engine)", property: "name", from: "DB.INFOSVR.VAGRANT.IBM.COM", to: "{{ groups['ibm-information-server-repo'][0] | upper }}" }
      - { type: "data_file", property: "path", from: "/data/files/CocoPharma", to: "{{ ibm_infosvr_samples_cocopharma_targets.files }}" }
    iaxml_mappings:
      - { type: "DataSource", attr: "host", from: "DB.INFOSVR.VAGRANT.IBM.COM", to: "{{ groups['ibm-information-server-repo'][0] | upper }}" }
      - { type: "DataSource", attr: "name", from: "COCOPHRM", to: "{{ ibm_infosvr_samples_cocopharma_targets.db_name | upper }}" }
  tasks:
    - name: ensure data file directory exists
      file:
        path: "{{ ibm_infosvr_samples_cocopharma_targets.files }}"
        state: directory
        mode: 0755
        owner: "{{ ibm_infosvr_users.dsadm }}"
        group: "{{ ibm_infosvr_groups.dsadm }}"
      become: yes
      when: ('ibm-information-server-engine' in group_names)

    - name: transfer sample data files
      copy:
        src: "{{ ibm_infosvr_samples_cocopharma_media }}/data/"
        dest: "{{ ibm_infosvr_samples_cocopharma_targets.files }}"
        owner: "{{ ibm_infosvr_users.dsadm }}"
        group: "{{ ibm_infosvr_groups.dsadm }}"
        mode: 0644
      become: yes
      when: ('ibm-information-server-engine' in group_names)

    - name: copy data load script
      template:
        src: "{{ ibm_infosvr_samples_cocopharma_media }}/db2_load.sql"
        dest: "/home/{{ ibm_infosvr_users.db2inst1 }}/cocopharma.sql"
      become_user: "{{ ibm_infosvr_users.db2inst1 }}"
      become: yes
      when: ('ibm-information-server-repo' in group_names)

    - name: load sample data to database
      shell: >
              source ~/.bashrc &&
              db2 -td$ -f /home/{{ ibm_infosvr_users.db2inst1 }}/cocopharma.sql
      args:
        executable: /bin/bash
      become_user: "{{ ibm_infosvr_users.db2inst1 }}"
      become: yes
      register: __db2_load_result
      failed_when: __db2_load_result.rc != 0 and __db2_load_result.rc != 4
      when: ('ibm-information-server-repo' in group_names)

    - import_role: name=IBM.infosvr-metadata-asset-manager
      vars:
        ibm_infosvr_metadata_asset_mgr_import_areas:
          - name: CocoPharma_SampleFiles
            type: LocalFileConnector
            description: "Loads metadata for CocoPharma sample files"
            metadata_interchange_server: "{{ groups['ibm-information-server-engine'][0] | lower }}"
            dcn:
              name: LOCALFS
            assets_to_import:
              - "folder[{{ ibm_infosvr_samples_cocopharma_targets.files }}]"
            hostname: "{{ groups['ibm-information-server-engine'][0] | upper }}"
          - name: CocoPharma_SampleDB
            type: DB2Connector
            description: "Import area for CocoPharma sample database"
            metadata_interchange_server: "{{ groups['ibm-information-server-engine'][0] | lower }}"
            dcn:
              name: CocoPharma_DB2
              description: "CocoPharma DB2 connection"
              database: "{{ ibm_infosvr_samples_cocopharma_targets.db_name | upper }}"
              username: "{{ ibm_infosvr_users.db2inst1 }}"
              password: "{{ ibm_infosvr_upwds.db2inst1 }}"
            assets_to_import:
              - "database[{{ ibm_infosvr_samples_cocopharma_targets.db_name | upper }}]"
            hostname: "{{ groups['ibm-information-server-repo'][0] | upper }}"
            database_name: "{{ ibm_infosvr_samples_cocopharma_targets.db_name | upper }}"

    - import_role:
        name: IBM.infosvr-import-export
        tasks_from: import
      vars:
        ibm_infosvr_impexp_bg_import:
          - src: "{{ ibm_infosvr_samples_cocopharma_media }}/bg.xml"
            merge: overwrite
        ibm_infosvr_impexp_igc_relns_import:
          - src: "{{ ibm_infosvr_samples_cocopharma_media }}/dbcol2term.json"
            type: database_column
            relationship: assigned_to_terms
            map: "{{ rest_mappings }}"
            mode: REPLACE_ALL
          - src: "{{ ibm_infosvr_samples_cocopharma_media }}/dfcol2term.json"
            type: data_file_field
            relationship: assigned_to_terms
            map: "{{ rest_mappings }}"
            mode: REPLACE_ALL
        ibm_infosvr_impexp_ia_import:
          - src: "{{ ibm_infosvr_samples_cocopharma_media }}/ia.xml"
            project: CocoPharma
            map: "{{ iaxml_mappings }}"

    - import_role:
        name: IBM.infosvr-import-export
        tasks_from: validate
      vars:
        ibm_infosvr_impexp_validate:
          that:
            - number_of: category
              meeting_any_conditions:
                - { property: "parent_category.name", operator: "=", value: "Coco Pharmaceuticals" }
              is: 2
            - number_of: term
              meeting_all_conditions:
                - { property: "parent_category.parent_category.name", operator: "=", value: "Coco Pharmaceuticals" }
              is: 51
            - number_of: database_column
              meeting_all_conditions:
                - { property: "database_table_or_view.database_schema.database.name", operator: "=", value: "{{ ibm_infosvr_samples_cocopharma_targets.db_name | upper }}" }
                - { property: "database_table_or_view.database_schema.database.host.name", operator: "=", value: "{{ groups['ibm-information-server-repo'][0] | upper }}" }
              is: 63
            - number_of: database_column
              meeting_all_conditions:
                - { property: "database_table_or_view.database_schema.database.name", operator: "=", value: "{{ ibm_infosvr_samples_cocopharma_targets.db_name | upper }}" }
                - { property: "database_table_or_view.database_schema.database.host.name", operator: "=", value: "{{ groups['ibm-information-server-repo'][0] | upper }}" }
                - { property: "assigned_to_terms.parent_category.parent_category.name", operator: "=", value: "Coco Pharmaceuticals" }
              is: 61
            - number_of: data_file_field
              meeting_all_conditions:
                - { property: "data_file_record.data_file.host.name", operator: "=", value: "{{ groups['ibm-information-server-engine'][0] | upper }}" }
                - { property: "data_file_record.data_file.path", operator: "=", value: "{{ ibm_infosvr_samples_cocopharma_targets.files }}" }
              is: 63
            - number_of: data_file_field
              meeting_all_conditions:
                - { property: "data_file_record.data_file.host.name", operator: "=", value: "{{ groups['ibm-information-server-engine'][0] | upper }}" }
                - { property: "data_file_record.data_file.path", operator: "=", value: "{{ ibm_infosvr_samples_cocopharma_targets.files }}" }
                - { property: "assigned_to_terms.parent_category.parent_category.name", operator: "=", value: "Coco Pharmaceuticals" }
              is: 61
